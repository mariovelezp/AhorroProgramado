//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WS_MiMetaBG.WsAvisoSeguro_BG {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NotificacionesServiceSoap", Namespace="http://tempuri.org/")]
    public partial class NotificacionesService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback EnviaMensajeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidaEnvioMensajeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidaSuscripcionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NotificacionesService() {
            this.Url = global::WS_MiMetaBG.Properties.Settings.Default.WS_MiMetaBG_WsAvisoSeguro_BG_NotificacionesService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event EnviaMensajeCompletedEventHandler EnviaMensajeCompleted;
        
        /// <remarks/>
        public event ValidaEnvioMensajeCompletedEventHandler ValidaEnvioMensajeCompleted;
        
        /// <remarks/>
        public event ValidaSuscripcionCompletedEventHandler ValidaSuscripcionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnviaMensaje", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EnviaMensaje(
                    string categoria, 
                    string canal, 
                    string construirMail, 
                    string mailConstruido, 
                    string construirSMS, 
                    string smsConstruido, 
                    string remitente, 
                    string asunto, 
                    string codigoAviso, 
                    string numeroSecuenciaControl, 
                    string email, 
                    string celular, 
                    string nombre1, 
                    string nombre2, 
                    string cuenta1, 
                    string cuenta2, 
                    string producto1, 
                    string producto2, 
                    string valor1, 
                    string valor2, 
                    string valor3, 
                    string campo1, 
                    string campo2, 
                    string terminal, 
                    string fecha, 
                    string hora, 
                    string ID, 
                    string tipoID) {
            object[] results = this.Invoke("EnviaMensaje", new object[] {
                        categoria,
                        canal,
                        construirMail,
                        mailConstruido,
                        construirSMS,
                        smsConstruido,
                        remitente,
                        asunto,
                        codigoAviso,
                        numeroSecuenciaControl,
                        email,
                        celular,
                        nombre1,
                        nombre2,
                        cuenta1,
                        cuenta2,
                        producto1,
                        producto2,
                        valor1,
                        valor2,
                        valor3,
                        campo1,
                        campo2,
                        terminal,
                        fecha,
                        hora,
                        ID,
                        tipoID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EnviaMensajeAsync(
                    string categoria, 
                    string canal, 
                    string construirMail, 
                    string mailConstruido, 
                    string construirSMS, 
                    string smsConstruido, 
                    string remitente, 
                    string asunto, 
                    string codigoAviso, 
                    string numeroSecuenciaControl, 
                    string email, 
                    string celular, 
                    string nombre1, 
                    string nombre2, 
                    string cuenta1, 
                    string cuenta2, 
                    string producto1, 
                    string producto2, 
                    string valor1, 
                    string valor2, 
                    string valor3, 
                    string campo1, 
                    string campo2, 
                    string terminal, 
                    string fecha, 
                    string hora, 
                    string ID, 
                    string tipoID) {
            this.EnviaMensajeAsync(categoria, canal, construirMail, mailConstruido, construirSMS, smsConstruido, remitente, asunto, codigoAviso, numeroSecuenciaControl, email, celular, nombre1, nombre2, cuenta1, cuenta2, producto1, producto2, valor1, valor2, valor3, campo1, campo2, terminal, fecha, hora, ID, tipoID, null);
        }
        
        /// <remarks/>
        public void EnviaMensajeAsync(
                    string categoria, 
                    string canal, 
                    string construirMail, 
                    string mailConstruido, 
                    string construirSMS, 
                    string smsConstruido, 
                    string remitente, 
                    string asunto, 
                    string codigoAviso, 
                    string numeroSecuenciaControl, 
                    string email, 
                    string celular, 
                    string nombre1, 
                    string nombre2, 
                    string cuenta1, 
                    string cuenta2, 
                    string producto1, 
                    string producto2, 
                    string valor1, 
                    string valor2, 
                    string valor3, 
                    string campo1, 
                    string campo2, 
                    string terminal, 
                    string fecha, 
                    string hora, 
                    string ID, 
                    string tipoID, 
                    object userState) {
            if ((this.EnviaMensajeOperationCompleted == null)) {
                this.EnviaMensajeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnviaMensajeOperationCompleted);
            }
            this.InvokeAsync("EnviaMensaje", new object[] {
                        categoria,
                        canal,
                        construirMail,
                        mailConstruido,
                        construirSMS,
                        smsConstruido,
                        remitente,
                        asunto,
                        codigoAviso,
                        numeroSecuenciaControl,
                        email,
                        celular,
                        nombre1,
                        nombre2,
                        cuenta1,
                        cuenta2,
                        producto1,
                        producto2,
                        valor1,
                        valor2,
                        valor3,
                        campo1,
                        campo2,
                        terminal,
                        fecha,
                        hora,
                        ID,
                        tipoID}, this.EnviaMensajeOperationCompleted, userState);
        }
        
        private void OnEnviaMensajeOperationCompleted(object arg) {
            if ((this.EnviaMensajeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnviaMensajeCompleted(this, new EnviaMensajeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidaEnvioMensaje", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidaEnvioMensaje(string canal, string numeroCuenta, string identificacion) {
            object[] results = this.Invoke("ValidaEnvioMensaje", new object[] {
                        canal,
                        numeroCuenta,
                        identificacion});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidaEnvioMensajeAsync(string canal, string numeroCuenta, string identificacion) {
            this.ValidaEnvioMensajeAsync(canal, numeroCuenta, identificacion, null);
        }
        
        /// <remarks/>
        public void ValidaEnvioMensajeAsync(string canal, string numeroCuenta, string identificacion, object userState) {
            if ((this.ValidaEnvioMensajeOperationCompleted == null)) {
                this.ValidaEnvioMensajeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidaEnvioMensajeOperationCompleted);
            }
            this.InvokeAsync("ValidaEnvioMensaje", new object[] {
                        canal,
                        numeroCuenta,
                        identificacion}, this.ValidaEnvioMensajeOperationCompleted, userState);
        }
        
        private void OnValidaEnvioMensajeOperationCompleted(object arg) {
            if ((this.ValidaEnvioMensajeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidaEnvioMensajeCompleted(this, new ValidaEnvioMensajeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidaSuscripcion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidaSuscripcion(string canal, string categoria, string identificacion) {
            object[] results = this.Invoke("ValidaSuscripcion", new object[] {
                        canal,
                        categoria,
                        identificacion});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidaSuscripcionAsync(string canal, string categoria, string identificacion) {
            this.ValidaSuscripcionAsync(canal, categoria, identificacion, null);
        }
        
        /// <remarks/>
        public void ValidaSuscripcionAsync(string canal, string categoria, string identificacion, object userState) {
            if ((this.ValidaSuscripcionOperationCompleted == null)) {
                this.ValidaSuscripcionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidaSuscripcionOperationCompleted);
            }
            this.InvokeAsync("ValidaSuscripcion", new object[] {
                        canal,
                        categoria,
                        identificacion}, this.ValidaSuscripcionOperationCompleted, userState);
        }
        
        private void OnValidaSuscripcionOperationCompleted(object arg) {
            if ((this.ValidaSuscripcionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidaSuscripcionCompleted(this, new ValidaSuscripcionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void EnviaMensajeCompletedEventHandler(object sender, EnviaMensajeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnviaMensajeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnviaMensajeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ValidaEnvioMensajeCompletedEventHandler(object sender, ValidaEnvioMensajeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidaEnvioMensajeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidaEnvioMensajeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ValidaSuscripcionCompletedEventHandler(object sender, ValidaSuscripcionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidaSuscripcionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidaSuscripcionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591